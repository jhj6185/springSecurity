<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.2.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">


   <security:http auto-config="true" use-expressions="true">
   <security:intercept-url pattern="/sample/all" access="permitAll" />
   <security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')" />
   <security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')" />
      <!-- 학원에서 연습용으로 만든거라 주석처리함 
      <security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess"/> -->
      <security:form-login login-page="/customLogin"/>
      <!-- 내가 만든 로그인 페이지(/customLogin) 를 쓰겠다고 하는거 -->
      <security:logout logout-url="/customLogout" invalidate-session="true" delete-cookies="remember-me, JSESSION_ID"/>
      <!-- 로그아웃시 세션과 쿠키를 지워주도록 설정 -->
   <security:access-denied-handler ref="customAccessDenied"/>
   <security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
   <!-- 일주일간 login한 정보를 저장하겟다는 뜻임 604800이 일주일 -->
   </security:http>
   <security:authentication-manager>
   <security:authentication-provider user-service-ref="customUserDetailsService">
  <!-- 이제 db에 있는 권한으로 들어가게할거니까 주석처리  	
  	<security:user-service>
   		<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
   		<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER, ROLE_ADMIN"/>
   	</security:user-service> -->
   	<!-- bcrypt : 패스워드를 저장하는 용도로 설계된 해시 함수
   		특정 문자열을 암호화하고, 체크하는 쪽에서는 암호화된 패스워드가 가능한 패스워드인지만 확인 -->
   	<!-- provider 에 user-service-ref 를 쓰기위해 지움
   	<security:jdbc-user-service data-source-ref="dataSource"
   		users-by-username-query="select userid, userpwd, enabled from tbl_member where userid=? "
   		authorities-by-username-query="select userid, auth from tbl_member_auth where userid=? "/> -->
   	<security:password-encoder ref="bcryptPasswordEncoder"/>
   	
   </security:authentication-provider>
   </security:authentication-manager>
		
<bean id="customAccessDenied" class="org.conan.security.CustomAccessDeniedHandler"></bean>
<!-- 학원에서 연습용으로 만든거라 주석처리함
<bean id="customLoginSuccess" class="org.conan.security.CustomLoginSuccessHandler"></bean> -->
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
<bean id="customUserDetailsService" class="org.conan.security.CustomUserDetailsService"></bean>
<!-- 변경된 방식으로 로그인 처리를 하는지 우선적으로 확인 -->
</beans>